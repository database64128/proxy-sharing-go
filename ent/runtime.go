// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/database64128/proxy-sharing-go/ent/account"
	"github.com/database64128/proxy-sharing-go/ent/node"
	"github.com/database64128/proxy-sharing-go/ent/schema"
	"github.com/database64128/proxy-sharing-go/ent/server"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountMixin := schema.Account{}.Mixin()
	accountMixinFields0 := accountMixin[0].Fields()
	_ = accountMixinFields0
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescCreateTime is the schema descriptor for create_time field.
	accountDescCreateTime := accountMixinFields0[0].Descriptor()
	// account.DefaultCreateTime holds the default value on creation for the create_time field.
	account.DefaultCreateTime = accountDescCreateTime.Default.(func() time.Time)
	// accountDescUpdateTime is the schema descriptor for update_time field.
	accountDescUpdateTime := accountMixinFields0[1].Descriptor()
	// account.DefaultUpdateTime holds the default value on creation for the update_time field.
	account.DefaultUpdateTime = accountDescUpdateTime.Default.(func() time.Time)
	// account.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	account.UpdateDefaultUpdateTime = accountDescUpdateTime.UpdateDefault.(func() time.Time)
	// accountDescUsername is the schema descriptor for username field.
	accountDescUsername := accountFields[0].Descriptor()
	// account.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	account.UsernameValidator = accountDescUsername.Validators[0].(func(string) error)
	// accountDescRegistrationToken is the schema descriptor for registration_token field.
	accountDescRegistrationToken := accountFields[1].Descriptor()
	// account.RegistrationTokenValidator is a validator for the "registration_token" field. It is called by the builders before save.
	account.RegistrationTokenValidator = accountDescRegistrationToken.Validators[0].(func([]byte) error)
	// accountDescAccessToken is the schema descriptor for access_token field.
	accountDescAccessToken := accountFields[2].Descriptor()
	// account.AccessTokenValidator is a validator for the "access_token" field. It is called by the builders before save.
	account.AccessTokenValidator = accountDescAccessToken.Validators[0].(func([]byte) error)
	// accountDescRefreshToken is the schema descriptor for refresh_token field.
	accountDescRefreshToken := accountFields[3].Descriptor()
	// account.RefreshTokenValidator is a validator for the "refresh_token" field. It is called by the builders before save.
	account.RefreshTokenValidator = accountDescRefreshToken.Validators[0].(func([]byte) error)
	nodeMixin := schema.Node{}.Mixin()
	nodeMixinFields0 := nodeMixin[0].Fields()
	_ = nodeMixinFields0
	nodeFields := schema.Node{}.Fields()
	_ = nodeFields
	// nodeDescCreateTime is the schema descriptor for create_time field.
	nodeDescCreateTime := nodeMixinFields0[0].Descriptor()
	// node.DefaultCreateTime holds the default value on creation for the create_time field.
	node.DefaultCreateTime = nodeDescCreateTime.Default.(func() time.Time)
	// nodeDescUpdateTime is the schema descriptor for update_time field.
	nodeDescUpdateTime := nodeMixinFields0[1].Descriptor()
	// node.DefaultUpdateTime holds the default value on creation for the update_time field.
	node.DefaultUpdateTime = nodeDescUpdateTime.Default.(func() time.Time)
	// node.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	node.UpdateDefaultUpdateTime = nodeDescUpdateTime.UpdateDefault.(func() time.Time)
	// nodeDescName is the schema descriptor for name field.
	nodeDescName := nodeFields[0].Descriptor()
	// node.NameValidator is a validator for the "name" field. It is called by the builders before save.
	node.NameValidator = nodeDescName.Validators[0].(func(string) error)
	serverMixin := schema.Server{}.Mixin()
	serverMixinFields0 := serverMixin[0].Fields()
	_ = serverMixinFields0
	serverFields := schema.Server{}.Fields()
	_ = serverFields
	// serverDescCreateTime is the schema descriptor for create_time field.
	serverDescCreateTime := serverMixinFields0[0].Descriptor()
	// server.DefaultCreateTime holds the default value on creation for the create_time field.
	server.DefaultCreateTime = serverDescCreateTime.Default.(func() time.Time)
	// serverDescUpdateTime is the schema descriptor for update_time field.
	serverDescUpdateTime := serverMixinFields0[1].Descriptor()
	// server.DefaultUpdateTime holds the default value on creation for the update_time field.
	server.DefaultUpdateTime = serverDescUpdateTime.Default.(func() time.Time)
	// server.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	server.UpdateDefaultUpdateTime = serverDescUpdateTime.UpdateDefault.(func() time.Time)
	// serverDescName is the schema descriptor for name field.
	serverDescName := serverFields[0].Descriptor()
	// server.NameValidator is a validator for the "name" field. It is called by the builders before save.
	server.NameValidator = serverDescName.Validators[0].(func(string) error)
}
